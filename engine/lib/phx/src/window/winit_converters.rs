use crate::input::{KeyboardButton, MouseControl};
use winit::keyboard::KeyCode as WinitKeyCode;

use super::{CursorIcon, WindowTheme};

pub fn convert_keycode(keycode: WinitKeyCode) -> KeyboardButton {
    match keycode {
        WinitKeyCode::Backquote => KeyboardButton::Backquote,
        WinitKeyCode::Backslash => KeyboardButton::Backslash,
        WinitKeyCode::BracketLeft => KeyboardButton::BracketLeft,
        WinitKeyCode::BracketRight => KeyboardButton::BracketRight,
        WinitKeyCode::Comma => KeyboardButton::Comma,
        WinitKeyCode::Digit0 => KeyboardButton::Key0,
        WinitKeyCode::Digit1 => KeyboardButton::Key1,
        WinitKeyCode::Digit2 => KeyboardButton::Key2,
        WinitKeyCode::Digit3 => KeyboardButton::Key3,
        WinitKeyCode::Digit4 => KeyboardButton::Key4,
        WinitKeyCode::Digit5 => KeyboardButton::Key5,
        WinitKeyCode::Digit6 => KeyboardButton::Key6,
        WinitKeyCode::Digit7 => KeyboardButton::Key7,
        WinitKeyCode::Digit8 => KeyboardButton::Key8,
        WinitKeyCode::Digit9 => KeyboardButton::Key9,
        WinitKeyCode::Equal => KeyboardButton::Equal,
        WinitKeyCode::IntlBackslash => KeyboardButton::IntlBackslash,
        WinitKeyCode::IntlRo => KeyboardButton::IntlRo,
        WinitKeyCode::IntlYen => KeyboardButton::IntlYen,
        WinitKeyCode::KeyA => KeyboardButton::A,
        WinitKeyCode::KeyB => KeyboardButton::B,
        WinitKeyCode::KeyC => KeyboardButton::C,
        WinitKeyCode::KeyD => KeyboardButton::D,
        WinitKeyCode::KeyE => KeyboardButton::E,
        WinitKeyCode::KeyF => KeyboardButton::F,
        WinitKeyCode::KeyG => KeyboardButton::G,
        WinitKeyCode::KeyH => KeyboardButton::H,
        WinitKeyCode::KeyI => KeyboardButton::I,
        WinitKeyCode::KeyJ => KeyboardButton::J,
        WinitKeyCode::KeyK => KeyboardButton::K,
        WinitKeyCode::KeyL => KeyboardButton::L,
        WinitKeyCode::KeyM => KeyboardButton::M,
        WinitKeyCode::KeyN => KeyboardButton::N,
        WinitKeyCode::KeyO => KeyboardButton::O,
        WinitKeyCode::KeyP => KeyboardButton::P,
        WinitKeyCode::KeyQ => KeyboardButton::Q,
        WinitKeyCode::KeyR => KeyboardButton::R,
        WinitKeyCode::KeyS => KeyboardButton::S,
        WinitKeyCode::KeyT => KeyboardButton::T,
        WinitKeyCode::KeyU => KeyboardButton::U,
        WinitKeyCode::KeyV => KeyboardButton::V,
        WinitKeyCode::KeyW => KeyboardButton::W,
        WinitKeyCode::KeyX => KeyboardButton::X,
        WinitKeyCode::KeyY => KeyboardButton::Y,
        WinitKeyCode::KeyZ => KeyboardButton::Z,
        WinitKeyCode::Minus => KeyboardButton::Minus,
        WinitKeyCode::Period => KeyboardButton::Period,
        WinitKeyCode::Quote => KeyboardButton::Quote,
        WinitKeyCode::Semicolon => KeyboardButton::Semicolon,
        WinitKeyCode::Slash => KeyboardButton::Slash,
        WinitKeyCode::AltLeft => KeyboardButton::AltLeft,
        WinitKeyCode::AltRight => KeyboardButton::AltRight,
        WinitKeyCode::Backspace => KeyboardButton::Backspace,
        WinitKeyCode::CapsLock => KeyboardButton::CapsLock,
        WinitKeyCode::ContextMenu => KeyboardButton::ContextMenu,
        WinitKeyCode::ControlLeft => KeyboardButton::ControlLeft,
        WinitKeyCode::ControlRight => KeyboardButton::ControlRight,
        WinitKeyCode::Enter => KeyboardButton::Enter,
        WinitKeyCode::SuperLeft => KeyboardButton::SuperLeft,
        WinitKeyCode::SuperRight => KeyboardButton::SuperRight,
        WinitKeyCode::ShiftLeft => KeyboardButton::ShiftLeft,
        WinitKeyCode::ShiftRight => KeyboardButton::ShiftRight,
        WinitKeyCode::Space => KeyboardButton::Space,
        WinitKeyCode::Tab => KeyboardButton::Tab,
        WinitKeyCode::Convert => KeyboardButton::Convert,
        WinitKeyCode::KanaMode => KeyboardButton::KanaMode,
        WinitKeyCode::Lang1 => KeyboardButton::Lang1,
        WinitKeyCode::Lang2 => KeyboardButton::Lang2,
        WinitKeyCode::Lang3 => KeyboardButton::Lang3,
        WinitKeyCode::Lang4 => KeyboardButton::Lang4,
        WinitKeyCode::Lang5 => KeyboardButton::Lang5,
        WinitKeyCode::NonConvert => KeyboardButton::NonConvert,
        WinitKeyCode::Delete => KeyboardButton::Delete,
        WinitKeyCode::End => KeyboardButton::End,
        WinitKeyCode::Help => KeyboardButton::Help,
        WinitKeyCode::Home => KeyboardButton::Home,
        WinitKeyCode::Insert => KeyboardButton::Insert,
        WinitKeyCode::PageDown => KeyboardButton::PageDown,
        WinitKeyCode::PageUp => KeyboardButton::PageUp,
        WinitKeyCode::ArrowDown => KeyboardButton::Down,
        WinitKeyCode::ArrowLeft => KeyboardButton::Left,
        WinitKeyCode::ArrowRight => KeyboardButton::Right,
        WinitKeyCode::ArrowUp => KeyboardButton::Up,
        WinitKeyCode::NumLock => KeyboardButton::NumLock,
        WinitKeyCode::Numpad0 => KeyboardButton::Numpad0,
        WinitKeyCode::Numpad1 => KeyboardButton::Numpad1,
        WinitKeyCode::Numpad2 => KeyboardButton::Numpad2,
        WinitKeyCode::Numpad3 => KeyboardButton::Numpad3,
        WinitKeyCode::Numpad4 => KeyboardButton::Numpad4,
        WinitKeyCode::Numpad5 => KeyboardButton::Numpad5,
        WinitKeyCode::Numpad6 => KeyboardButton::Numpad6,
        WinitKeyCode::Numpad7 => KeyboardButton::Numpad7,
        WinitKeyCode::Numpad8 => KeyboardButton::Numpad8,
        WinitKeyCode::Numpad9 => KeyboardButton::Numpad9,
        WinitKeyCode::NumpadAdd => KeyboardButton::NumpadAdd,
        WinitKeyCode::NumpadBackspace => KeyboardButton::NumpadBackspace,
        WinitKeyCode::NumpadClear => KeyboardButton::NumpadClear,
        WinitKeyCode::NumpadClearEntry => KeyboardButton::NumpadClearEntry,
        WinitKeyCode::NumpadComma => KeyboardButton::NumpadComma,
        WinitKeyCode::NumpadDecimal => KeyboardButton::NumpadDecimal,
        WinitKeyCode::NumpadDivide => KeyboardButton::NumpadDivide,
        WinitKeyCode::NumpadEnter => KeyboardButton::NumpadEnter,
        WinitKeyCode::NumpadEqual => KeyboardButton::NumpadEqual,
        WinitKeyCode::NumpadHash => KeyboardButton::NumpadHash,
        WinitKeyCode::NumpadMemoryAdd => KeyboardButton::NumpadMemoryAdd,
        WinitKeyCode::NumpadMemoryClear => KeyboardButton::NumpadMemoryClear,
        WinitKeyCode::NumpadMemoryRecall => KeyboardButton::NumpadMemoryRecall,
        WinitKeyCode::NumpadMemoryStore => KeyboardButton::NumpadMemoryStore,
        WinitKeyCode::NumpadMemorySubtract => KeyboardButton::NumpadMemorySubtract,
        WinitKeyCode::NumpadMultiply => KeyboardButton::NumpadMultiply,
        WinitKeyCode::NumpadParenLeft => KeyboardButton::NumpadParenLeft,
        WinitKeyCode::NumpadParenRight => KeyboardButton::NumpadParenRight,
        WinitKeyCode::NumpadStar => KeyboardButton::NumpadStar,
        WinitKeyCode::NumpadSubtract => KeyboardButton::NumpadSubtract,
        WinitKeyCode::Escape => KeyboardButton::Escape,
        WinitKeyCode::Fn => KeyboardButton::Fn,
        WinitKeyCode::FnLock => KeyboardButton::FnLock,
        WinitKeyCode::PrintScreen => KeyboardButton::PrintScreen,
        WinitKeyCode::ScrollLock => KeyboardButton::ScrollLock,
        WinitKeyCode::Pause => KeyboardButton::Pause,
        WinitKeyCode::BrowserBack => KeyboardButton::BrowserBack,
        WinitKeyCode::BrowserFavorites => KeyboardButton::BrowserFavorites,
        WinitKeyCode::BrowserForward => KeyboardButton::BrowserForward,
        WinitKeyCode::BrowserHome => KeyboardButton::BrowserHome,
        WinitKeyCode::BrowserRefresh => KeyboardButton::BrowserRefresh,
        WinitKeyCode::BrowserSearch => KeyboardButton::BrowserSearch,
        WinitKeyCode::BrowserStop => KeyboardButton::BrowserStop,
        WinitKeyCode::Eject => KeyboardButton::Eject,
        WinitKeyCode::LaunchApp1 => KeyboardButton::LaunchApp1,
        WinitKeyCode::LaunchApp2 => KeyboardButton::LaunchApp2,
        WinitKeyCode::LaunchMail => KeyboardButton::LaunchMail,
        WinitKeyCode::MediaPlayPause => KeyboardButton::MediaPlayPause,
        WinitKeyCode::MediaSelect => KeyboardButton::MediaSelect,
        WinitKeyCode::MediaStop => KeyboardButton::MediaStop,
        WinitKeyCode::MediaTrackNext => KeyboardButton::MediaTrackNext,
        WinitKeyCode::MediaTrackPrevious => KeyboardButton::MediaTrackPrevious,
        WinitKeyCode::Power => KeyboardButton::Power,
        WinitKeyCode::Sleep => KeyboardButton::Sleep,
        WinitKeyCode::AudioVolumeDown => KeyboardButton::AudioVolumeDown,
        WinitKeyCode::AudioVolumeMute => KeyboardButton::AudioVolumeMute,
        WinitKeyCode::AudioVolumeUp => KeyboardButton::AudioVolumeUp,
        WinitKeyCode::WakeUp => KeyboardButton::WakeUp,
        WinitKeyCode::Meta => KeyboardButton::Meta,
        WinitKeyCode::Hyper => KeyboardButton::Hyper,
        WinitKeyCode::Turbo => KeyboardButton::Turbo,
        WinitKeyCode::Abort => KeyboardButton::Abort,
        WinitKeyCode::Resume => KeyboardButton::Resume,
        WinitKeyCode::Suspend => KeyboardButton::Suspend,
        WinitKeyCode::Again => KeyboardButton::Again,
        WinitKeyCode::Copy => KeyboardButton::Copy,
        WinitKeyCode::Cut => KeyboardButton::Cut,
        WinitKeyCode::Find => KeyboardButton::Find,
        WinitKeyCode::Open => KeyboardButton::Open,
        WinitKeyCode::Paste => KeyboardButton::Paste,
        WinitKeyCode::Props => KeyboardButton::Props,
        WinitKeyCode::Select => KeyboardButton::Select,
        WinitKeyCode::Undo => KeyboardButton::Undo,
        WinitKeyCode::Hiragana => KeyboardButton::Hiragana,
        WinitKeyCode::Katakana => KeyboardButton::Katakana,
        WinitKeyCode::F1 => KeyboardButton::F1,
        WinitKeyCode::F2 => KeyboardButton::F2,
        WinitKeyCode::F3 => KeyboardButton::F3,
        WinitKeyCode::F4 => KeyboardButton::F4,
        WinitKeyCode::F5 => KeyboardButton::F5,
        WinitKeyCode::F6 => KeyboardButton::F6,
        WinitKeyCode::F7 => KeyboardButton::F7,
        WinitKeyCode::F8 => KeyboardButton::F8,
        WinitKeyCode::F9 => KeyboardButton::F9,
        WinitKeyCode::F10 => KeyboardButton::F10,
        WinitKeyCode::F11 => KeyboardButton::F11,
        WinitKeyCode::F12 => KeyboardButton::F12,
        WinitKeyCode::F13 => KeyboardButton::F13,
        WinitKeyCode::F14 => KeyboardButton::F14,
        WinitKeyCode::F15 => KeyboardButton::F15,
        WinitKeyCode::F16 => KeyboardButton::F16,
        WinitKeyCode::F17 => KeyboardButton::F17,
        WinitKeyCode::F18 => KeyboardButton::F18,
        WinitKeyCode::F19 => KeyboardButton::F19,
        WinitKeyCode::F20 => KeyboardButton::F20,
        WinitKeyCode::F21 => KeyboardButton::F21,
        WinitKeyCode::F22 => KeyboardButton::F22,
        WinitKeyCode::F23 => KeyboardButton::F23,
        WinitKeyCode::F24 => KeyboardButton::F24,
        WinitKeyCode::F25 => KeyboardButton::F25,
        WinitKeyCode::F26 => KeyboardButton::F26,
        WinitKeyCode::F27 => KeyboardButton::F27,
        WinitKeyCode::F28 => KeyboardButton::F28,
        WinitKeyCode::F29 => KeyboardButton::F29,
        WinitKeyCode::F30 => KeyboardButton::F30,
        WinitKeyCode::F31 => KeyboardButton::F31,
        WinitKeyCode::F32 => KeyboardButton::F32,
        WinitKeyCode::F33 => KeyboardButton::F33,
        WinitKeyCode::F34 => KeyboardButton::F34,
        WinitKeyCode::F35 => KeyboardButton::F35,
        _ => todo!(), // this should never happen
    }
}

pub fn convert_cursor_icon(cursor_icon: CursorIcon) -> winit::window::CursorIcon {
    match cursor_icon {
        CursorIcon::Default => winit::window::CursorIcon::Default,
        CursorIcon::Crosshair => winit::window::CursorIcon::Crosshair,
        CursorIcon::Pointer => winit::window::CursorIcon::Pointer,
        CursorIcon::Move => winit::window::CursorIcon::Move,
        CursorIcon::Text => winit::window::CursorIcon::Text,
        CursorIcon::Wait => winit::window::CursorIcon::Wait,
        CursorIcon::Help => winit::window::CursorIcon::Help,
        CursorIcon::Progress => winit::window::CursorIcon::Progress,
        CursorIcon::NotAllowed => winit::window::CursorIcon::NotAllowed,
        CursorIcon::ContextMenu => winit::window::CursorIcon::ContextMenu,
        CursorIcon::Cell => winit::window::CursorIcon::Cell,
        CursorIcon::VerticalText => winit::window::CursorIcon::VerticalText,
        CursorIcon::Alias => winit::window::CursorIcon::Alias,
        CursorIcon::Copy => winit::window::CursorIcon::Copy,
        CursorIcon::NoDrop => winit::window::CursorIcon::NoDrop,
        CursorIcon::Grab => winit::window::CursorIcon::Grab,
        CursorIcon::Grabbing => winit::window::CursorIcon::Grabbing,
        CursorIcon::AllScroll => winit::window::CursorIcon::AllScroll,
        CursorIcon::ZoomIn => winit::window::CursorIcon::ZoomIn,
        CursorIcon::ZoomOut => winit::window::CursorIcon::ZoomOut,
        CursorIcon::EResize => winit::window::CursorIcon::EResize,
        CursorIcon::NResize => winit::window::CursorIcon::NResize,
        CursorIcon::NeResize => winit::window::CursorIcon::NeResize,
        CursorIcon::NwResize => winit::window::CursorIcon::NwResize,
        CursorIcon::SResize => winit::window::CursorIcon::SResize,
        CursorIcon::SeResize => winit::window::CursorIcon::SeResize,
        CursorIcon::SwResize => winit::window::CursorIcon::SwResize,
        CursorIcon::WResize => winit::window::CursorIcon::WResize,
        CursorIcon::EwResize => winit::window::CursorIcon::EwResize,
        CursorIcon::NsResize => winit::window::CursorIcon::NsResize,
        CursorIcon::NeswResize => winit::window::CursorIcon::NeswResize,
        CursorIcon::NwseResize => winit::window::CursorIcon::NwseResize,
        CursorIcon::ColResize => winit::window::CursorIcon::ColResize,
        CursorIcon::RowResize => winit::window::CursorIcon::RowResize,
    }
}

pub fn convert_winit_theme(theme: winit::window::Theme) -> WindowTheme {
    match theme {
        winit::window::Theme::Light => WindowTheme::Light,
        winit::window::Theme::Dark => WindowTheme::Dark,
    }
}

pub fn convert_window_theme(theme: WindowTheme) -> winit::window::Theme {
    match theme {
        WindowTheme::Light => winit::window::Theme::Light,
        WindowTheme::Dark => winit::window::Theme::Dark,
    }
}

pub fn convert_element_state(element_state: winit::event::ElementState) -> f32 {
    match element_state {
        winit::event::ElementState::Pressed => 1.0,
        winit::event::ElementState::Released => 0.0,
    }
}

pub fn convert_mouse_button(mouse_button: winit::event::MouseButton) -> Option<MouseControl> {
    match mouse_button {
        winit::event::MouseButton::Left => Some(MouseControl::Left),
        winit::event::MouseButton::Right => Some(MouseControl::Right),
        winit::event::MouseButton::Middle => Some(MouseControl::Middle),
        winit::event::MouseButton::Forward => Some(MouseControl::Forward),
        winit::event::MouseButton::Back => Some(MouseControl::Back),
        winit::event::MouseButton::Other(val) => match val {
            4 => Some(MouseControl::X1),
            5 => Some(MouseControl::X2),
            _ => None,
        },
    }
}
